[{"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\index.js":"1","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\App.js":"2","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\reportWebVitals.js":"3","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\Pages\\Login.js":"4","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\Pages\\Player\\Player.js":"5","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\util\\reducer.js":"6","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\util\\DataLayer.js":"7","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\util\\spotify.js":"8","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Sidebar\\Sidebar.js":"9","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Body\\Body.js":"10","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Footer\\Footer.js":"11","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\SidebarOption\\SidebarOption.js":"12","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Header\\Header.js":"13","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\SongRow\\SongRow.js":"14"},{"size":683,"mtime":1610758957832,"results":"15","hashOfConfig":"16"},{"size":1406,"mtime":1611633258284,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":386,"mtime":1610758870640,"results":"19","hashOfConfig":"16"},{"size":522,"mtime":1611585292566,"results":"20","hashOfConfig":"16"},{"size":1036,"mtime":1611589772440,"results":"21","hashOfConfig":"16"},{"size":817,"mtime":1610759345007,"results":"22","hashOfConfig":"16"},{"size":829,"mtime":1610758835282,"results":"23","hashOfConfig":"16"},{"size":1104,"mtime":1611264925652,"results":"24","hashOfConfig":"16"},{"size":1415,"mtime":1611632342420,"results":"25","hashOfConfig":"16"},{"size":1789,"mtime":1611338155177,"results":"26","hashOfConfig":"16"},{"size":337,"mtime":1611249645317,"results":"27","hashOfConfig":"16"},{"size":780,"mtime":1611586998341,"results":"28","hashOfConfig":"16"},{"size":542,"mtime":1611633952622,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"19sby33",{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\index.js",[],["64","65"],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\App.js",["66","67"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Login from './Pages/Login'\nimport Player from './Pages/Player/Player';\nimport {getTokenFromUrl} from './util/spotify'\nimport SpotifyWebApi from 'spotify-web-api-js';\nimport { useDataLayerValue } from './util/DataLayer';\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n\n  const [ {user, token}, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n    const _token = hash.access_token;\n\n    if(_token){\n\n      spotify.setAccessToken(_token);\n      \n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n      spotify.getPlaylist('37i9dQZEVXcBOv1HQpehFS').then(response => \n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response,\n        })\n      )\n      \n      spotify.getMe().then((user) => {\n        dispatch({\n          type: 'SET_USER',\n          user: user,\n        });\n        \n      });\n      \n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        })\n      })\n    }\n  }, [token, dispatch]);\n\n    \n\n  return (\n    <div className=\"App\">\n      {\n        token ? (\n          <Player spotify={spotify}/>\n        ) : (\n          <Login/>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\reportWebVitals.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\Pages\\Login.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\Pages\\Player\\Player.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\util\\reducer.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\util\\DataLayer.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\util\\spotify.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Sidebar\\Sidebar.js",["68"],"import React from 'react'\r\nimport './Sidebar.css';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport LibraryMusicIcon from '@material-ui/icons/LibraryMusic';\r\nimport SidebarOption from '../SidebarOption/SidebarOption';\r\nimport { useDataLayerValue } from '../../util/DataLayer';\r\n\r\nfunction Sidebar() {\r\n    const [{playlists}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className = \"sidebar\">\r\n            <img className = \"sidebar_logo\" src = \"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt = \"logo\"/>\r\n            <SidebarOption Icon = {HomeIcon} title = \"Home\"/>\r\n            <SidebarOption Icon = {SearchIcon} title = \"Search\"/>\r\n            <SidebarOption Icon = {LibraryMusicIcon} title = \"Your Library\"/>\r\n            <br/>\r\n\r\n            <strong className = 'sidebar_title'>PLAYLISTS</strong>\r\n            <hr/>\r\n            {playlists?.items?.map(playlist => (\r\n                <SidebarOption title={playlist.name}/>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Body\\Body.js",["69"],"import React from 'react'\r\nimport { useDataLayerValue } from '../../util/DataLayer';\r\nimport Header from '../Header/Header';\r\nimport SongRow from '../SongRow/SongRow'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport './Body.css'\r\n\r\nfunction Body({ spotify }) {\r\n\r\n    const [{discover_weekly}, dispatch] = useDataLayerValue();\r\n    return (\r\n        <div className = \"body\">\r\n            <Header  spotify = {spotify}/>\r\n            <div className=\"body_info\">\r\n                <img src={discover_weekly?.images[0].url} alt =\"\"/>\r\n                <div className=\"body_infoText\">\r\n                    <strong>PLAYLIST</strong>\r\n                    <h2>Discover Weekly</h2>\r\n                    <p>{discover_weekly?.description}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"body_songs\">\r\n                <div className = \"body_icons\">\r\n                    <PlayCircleFilledIcon className = \"body_shuffle\"/>\r\n                    <FavoriteIcon fontSize = \"large\"/>\r\n                    <MoreHorizIcon/>s\r\n\r\n                </div>\r\n                {discover_weekly?.tracks.items.map(item => (\r\n                    <SongRow track = {item.track}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Body\r\n","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\SidebarOption\\SidebarOption.js",[],"C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\Header\\Header.js",["70"],"import React from 'react'\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport {Avatar} from '@material-ui/core';\r\nimport {useDataLayerValue} from '../../util/DataLayer';\r\n\r\nfunction Header() {\r\n    const [{ user }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className = \"header\">\r\n            <div className=\"header_left\">\r\n                <SearchIcon/>\r\n                <input placeholder = \"Search for Artists, Songs, Albums, and Playlists\" type=\"text\"/>\r\n            </div>\r\n            <div className = \"header_right\">\r\n                <Avatar src = {user?.images[0]?.url} alt = {user?.display_name}/>\r\n                <h4>{user?.display_name}</h4>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","C:\\Users\\Michael\\git\\SpotifyClone\\spotify-clone\\src\\components\\SongRow\\SongRow.js",["71"],"import React from 'react'\r\nimport './SongRow.css';\r\n\r\nfunction SongRow({ track }) {\r\n    return (\r\n        <div className = \"songRow\">\r\n            <img className = \"songRow_album\" src = {track.album.images[0].url}/>\r\n            <div className = \"songRow_info\">\r\n                <h1>{track.name}</h1>\r\n                <p>\r\n                    {track.artists.map((artist) => artist.name).join(\", \")} -{\" \"}\r\n                    {track.album.name}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongRow\r\n",{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"80","line":13,"column":12,"nodeType":"78","messageId":"79","endLine":13,"endColumn":16},{"ruleId":"76","severity":1,"message":"81","line":10,"column":25,"nodeType":"78","messageId":"79","endLine":10,"endColumn":33},{"ruleId":"76","severity":1,"message":"81","line":12,"column":31,"nodeType":"78","messageId":"79","endLine":12,"endColumn":39},{"ruleId":"76","severity":1,"message":"81","line":8,"column":22,"nodeType":"78","messageId":"79","endLine":8,"endColumn":30},{"ruleId":"82","severity":1,"message":"83","line":7,"column":13,"nodeType":"84","endLine":7,"endColumn":81},"no-native-reassign",["85"],"no-negated-in-lhs",["86"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'dispatch' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]